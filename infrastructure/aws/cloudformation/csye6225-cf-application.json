{

  "Resources" : {
    "CodeDeployEC2ServiceRoleInstanceProfile": {
			"Type": "AWS::IAM::InstanceProfile",
			"Properties": {
				"Path": "/",
				"Roles": [
					"CodeDeployEC2ServiceRole"
				]
			}
    },
    "WebServer":{
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" : "t2.micro",
        "ImageId" : "ami-66506c1c",
        "DisableApiTermination" : "true",
	      "KeyName" : "csye6225.pub",
        "SubnetId" : {"Ref" : "ParamWEBSERVERSUBNETID"},
	"SecurityGroupIds" : [ {"Ref" : "WebServerSecurityGroupID"}],
	"BlockDeviceMappings" : [
	  {
	    "DeviceName" : "/dev/sda1",
	    "Ebs" : {
		"VolumeSize" : "16",
		"VolumeType" : "gp2"
	    }
	  }
  ],
  "UserData" : {
    "Fn::Base64": {
    "Fn::Join": [
      "",
        [
          "#!/bin/bash -xe \n",
          "sudo apt-get update \n",
          "sudo apt-get install default-jre -y \n",
          "java -version \n",
          "sudo apt-get install tomcat8 -y \n",
          "sudo service tomcat8 restart \n",
          "sudo apt-get update \n",
          "sudo apt-get install ruby -y \n",
          "sudo apt-get install wget -y \n",
          "sudo apt-get install python -y \n",
          "sudo apt-get update \n",
          "sudo wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install \n",
          "sudo chmod +x ./install \n",
          "sudo ./install auto \n",
          "sudo service codedeploy-agent start \n",
          "sudo service codedeploy-agent status \n",
          "echo '#!/bin/sh' >> /usr/share/tomcat8/bin/setenv.sh \n",
          {
            "Fn::Sub": "sudo echo \"JAVA_OPTS=\\\"\\$JAVA_OPTS -Dspring.profiles.active=aws\\\"\" >> /etc/default/tomcat  \n"
          },
          {
            "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.url=jdbc:mysql://${DBServer.Endpoint.Address}:3306/csye6225\"' >> /usr/share/tomcat8/bin/setenv.sh \n"
          },
          {
            "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.username=${DBUser}\"' >> /usr/share/tomcat8/bin/setenv.sh \n"
          },
          {
            "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.password=${DBPassword}\"' >> /usr/share/tomcat8/bin/setenv.sh \n"
          },
          {
            "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dbucket.name=${S3BucketName}\"' >> /usr/share/tomcat8/bin/setenv.sh \n"
          },
          "chmod +x /usr/share/tomcat8/bin/setenv.sh\n",
          "chown tomcat8:tomcat8 /usr/share/tomcat8/bin/setenv.sh\n",
          "chmod 777 -R /tmp\n",
          "chmod 777 /var/lib/tomcat8 \n",
          "chmod 777 /var/lib/tomcat8/webapps\n",
          "sudo service tomcat8 restart\n"
        ]
      ]
    }
  },
  "IamInstanceProfile": {
    "Ref": "CodeDeployEC2ServiceRoleInstanceProfile"
  },
  "Tags" : [ { "Key" : "Name", "Value" : "WebServer" } ]
       }
      },

    "DynamoDBTable" : {
      "Type" : "AWS::DynamoDB::Table",
      "Properties" : {
        "AttributeDefinitions" : [
          {
            "AttributeName" : "Id",
            "AttributeType" : "S"   
          }
        ],
        "KeySchema" : [
          {
            "AttributeName" : "Id",
            "KeyType" : "HASH"
          }
        ],
        "ProvisionedThroughput" : {
          "ReadCapacityUnits" : "5",
          "WriteCapacityUnits" : "5"
        },
        "TableName" : "csye6225"
       }
     },
     "DBServer" : {
       "Type" : "AWS::RDS::DBInstance",
       "Properties" : {
         "AllocatedStorage" : "10",
         "DBInstanceIdentifier" : "csye6225-spring2018",
         "DBName" : "csye6225",
         "DBInstanceClass" : "db.t2.medium",
         "MultiAZ" : "false",
         "Engine" : "MySQL",
         "EngineVersion" : "5.6.37",
         "MasterUsername" : {"Ref" :"DBUser"},
         "MasterUserPassword" : {"Ref" : "DBPassword"},
         "DBSubnetGroupName" : {"Ref" : "DBSubnetGroup"},
         "DBSecurityGroups" : [{"Ref" : "DBServerSecurityGroupID"}],
         "PubliclyAccessible" : "false",
         "Tags" : [ { "Key" : "Name", "Value" : "DBServer" } ]
         }
      },
      "DBSubnetGroup" : {
         "Type" : "AWS::RDS::DBSubnetGroup",
         "Properties" : {
            "DBSubnetGroupDescription" : "DBSubnetGroup",
            "SubnetIds" : [ {"Ref" : "ParamDBSERVERSUBNETID"},{"Ref" : "ParamWEBSERVERSUBNETID"}],
            "Tags" : [ {"Key" : "Name", "Value" : "DBSubnetGroup"} ]
         }
      },

      "S3Bucket" : 
      {
        "Type": "AWS::S3::Bucket",
        "Properties": 
        {
            "BucketName" : {
              "Ref" : "S3BucketName"
            }
            
        }
}
       
  },
  
  "Parameters" : {
	     "ParamWEBSERVERSUBNETID" : {
            "Type" : "String"
	     },
       "ParamDBSERVERSUBNETID" : {
            "Type" : "String"
	     },
       "WebServerSecurityGroupID" : {
            "Type" : "String"
        },
       "DBServerSecurityGroupID" : {
            "Type" : "String"
        },
        "DBUser" : {
          "Type" : "String"
        },
        "DBPassword" : {
          "Type" : "String"
        },
        "S3BucketName" : {
          "Type" : "String"
        }
 }  
}
